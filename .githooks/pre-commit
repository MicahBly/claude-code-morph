#!/bin/bash
# Git pre-commit hook - quick checks before committing
# To install: ./install_hooks.sh

# Colors
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# Only run on Python files being committed
PYTHON_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.py$')

if [ -z "$PYTHON_FILES" ]; then
    # No Python files being committed
    exit 0
fi

echo "üîç Quick checks on Python files..."

# Check for syntax errors in staged files
for file in $PYTHON_FILES; do
    if [ -f "$file" ]; then
        if ! python -m py_compile "$file" 2>/dev/null; then
            echo -e "${RED}‚ùå Syntax error in $file${NC}"
            exit 1
        fi
    fi
done

# Check for common issues
ISSUES=""

# Check for pdb breakpoints
if git diff --cached | grep -E "import pdb|pdb\.set_trace\(\)" > /dev/null; then
    ISSUES="${ISSUES}  - Found pdb breakpoints\n"
fi

# Check for TODO or FIXME being added
if git diff --cached | grep -E "^\+.*TODO|^\+.*FIXME" > /dev/null; then
    ISSUES="${ISSUES}  - Found new TODO/FIXME comments\n"
fi

# Check for merge conflict markers
if git diff --cached | grep -E "^[+].*(<<<<<<<|=======|>>>>>>>)" > /dev/null; then
    echo -e "${RED}‚ùå Merge conflict markers found!${NC}"
    exit 1
fi

if [ -n "$ISSUES" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Minor issues found:${NC}"
    echo -e "$ISSUES"
    # Don't block commit for minor issues
fi

exit 0